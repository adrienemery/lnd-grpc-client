# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from lndgrpc.compiled import autopilot_pb2 as lndgrpc_dot_compiled_dot_autopilot__pb2


class AutopilotStub(object):
    """Autopilot is a service that can be used to get information about the current
    state of the daemon's autopilot agent, and also supply it with information
    that can be used when deciding where to open channels.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Status = channel.unary_unary(
                '/autopilotrpc.Autopilot/Status',
                request_serializer=lndgrpc_dot_compiled_dot_autopilot__pb2.StatusRequest.SerializeToString,
                response_deserializer=lndgrpc_dot_compiled_dot_autopilot__pb2.StatusResponse.FromString,
                )
        self.ModifyStatus = channel.unary_unary(
                '/autopilotrpc.Autopilot/ModifyStatus',
                request_serializer=lndgrpc_dot_compiled_dot_autopilot__pb2.ModifyStatusRequest.SerializeToString,
                response_deserializer=lndgrpc_dot_compiled_dot_autopilot__pb2.ModifyStatusResponse.FromString,
                )
        self.QueryScores = channel.unary_unary(
                '/autopilotrpc.Autopilot/QueryScores',
                request_serializer=lndgrpc_dot_compiled_dot_autopilot__pb2.QueryScoresRequest.SerializeToString,
                response_deserializer=lndgrpc_dot_compiled_dot_autopilot__pb2.QueryScoresResponse.FromString,
                )
        self.SetScores = channel.unary_unary(
                '/autopilotrpc.Autopilot/SetScores',
                request_serializer=lndgrpc_dot_compiled_dot_autopilot__pb2.SetScoresRequest.SerializeToString,
                response_deserializer=lndgrpc_dot_compiled_dot_autopilot__pb2.SetScoresResponse.FromString,
                )


class AutopilotServicer(object):
    """Autopilot is a service that can be used to get information about the current
    state of the daemon's autopilot agent, and also supply it with information
    that can be used when deciding where to open channels.
    """

    def Status(self, request, context):
        """
        Status returns whether the daemon's autopilot agent is active.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ModifyStatus(self, request, context):
        """
        ModifyStatus is used to modify the status of the autopilot agent, like
        enabling or disabling it.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryScores(self, request, context):
        """
        QueryScores queries all available autopilot heuristics, in addition to any
        active combination of these heruristics, for the scores they would give to
        the given nodes.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetScores(self, request, context):
        """
        SetScores attempts to set the scores used by the running autopilot agent,
        if the external scoring heuristic is enabled.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AutopilotServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Status': grpc.unary_unary_rpc_method_handler(
                    servicer.Status,
                    request_deserializer=lndgrpc_dot_compiled_dot_autopilot__pb2.StatusRequest.FromString,
                    response_serializer=lndgrpc_dot_compiled_dot_autopilot__pb2.StatusResponse.SerializeToString,
            ),
            'ModifyStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.ModifyStatus,
                    request_deserializer=lndgrpc_dot_compiled_dot_autopilot__pb2.ModifyStatusRequest.FromString,
                    response_serializer=lndgrpc_dot_compiled_dot_autopilot__pb2.ModifyStatusResponse.SerializeToString,
            ),
            'QueryScores': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryScores,
                    request_deserializer=lndgrpc_dot_compiled_dot_autopilot__pb2.QueryScoresRequest.FromString,
                    response_serializer=lndgrpc_dot_compiled_dot_autopilot__pb2.QueryScoresResponse.SerializeToString,
            ),
            'SetScores': grpc.unary_unary_rpc_method_handler(
                    servicer.SetScores,
                    request_deserializer=lndgrpc_dot_compiled_dot_autopilot__pb2.SetScoresRequest.FromString,
                    response_serializer=lndgrpc_dot_compiled_dot_autopilot__pb2.SetScoresResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'autopilotrpc.Autopilot', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Autopilot(object):
    """Autopilot is a service that can be used to get information about the current
    state of the daemon's autopilot agent, and also supply it with information
    that can be used when deciding where to open channels.
    """

    @staticmethod
    def Status(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/autopilotrpc.Autopilot/Status',
            lndgrpc_dot_compiled_dot_autopilot__pb2.StatusRequest.SerializeToString,
            lndgrpc_dot_compiled_dot_autopilot__pb2.StatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ModifyStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/autopilotrpc.Autopilot/ModifyStatus',
            lndgrpc_dot_compiled_dot_autopilot__pb2.ModifyStatusRequest.SerializeToString,
            lndgrpc_dot_compiled_dot_autopilot__pb2.ModifyStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryScores(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/autopilotrpc.Autopilot/QueryScores',
            lndgrpc_dot_compiled_dot_autopilot__pb2.QueryScoresRequest.SerializeToString,
            lndgrpc_dot_compiled_dot_autopilot__pb2.QueryScoresResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetScores(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/autopilotrpc.Autopilot/SetScores',
            lndgrpc_dot_compiled_dot_autopilot__pb2.SetScoresRequest.SerializeToString,
            lndgrpc_dot_compiled_dot_autopilot__pb2.SetScoresResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
